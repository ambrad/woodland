// Derived from https://github.com/E3SM-Project/COMPOSE; see
//     https://github.com/E3SM-Project/COMPOSE/blob/main/LICENSE
// for details of the 3-clause BSD license.

#include "woodland/acorn/compose_quadrature.hpp"

#include "woodland/acorn/macros.hpp"

#include <cmath>
#include <cassert>

namespace woodland {
namespace acorn {

static const Real sqrt5 = std::sqrt(5.0);
static const Real oosqrt5 = 1.0/sqrt5;
static const Real sqrt3o7 = std::sqrt(3.0/7.0);
static const Real np6a = std::sqrt(1.0/3.0 + 2.0*std::sqrt(7.0)/21.0);
static const Real np6b = std::sqrt(1.0/3.0 - 2.0*std::sqrt(7.0)/21.0);
static const Real np7a = std::sqrt((5.0 + 2.0*std::sqrt(5.0/3.0))/11.0);
static const Real np7b = std::sqrt((5.0 - 2.0*std::sqrt(5.0/3.0))/11.0);

Real x_gll_table[] = {
  -1, 1,
  -1, 0, 1,
  -1, -oosqrt5, oosqrt5, 1,
  -1, -sqrt3o7, 0, sqrt3o7, 1,
  -1, -np6a, -np6b, np6b, np6a, 1,
  -1, -np7a, -np7b, 0, np7b, np7a, 1,
  // The next set are obtained from Michels, H. H. "Abscissas and weight
  // coefficients for Lobatto quadrature." Mathematics of Computation 17.83
  // (1963): 237-244.
  // np 8
  -1, -0.8717401485096066153, -0.59170018143314230214, -0.20929921790247886877,
  0.20929921790247886877, 0.59170018143314230214, 0.87174014850960661534, 1,
  // np 9
  -1, -0.89975799541146015731, -0.67718627951073775345, -0.36311746382617815871,
  0, 0.36311746382617815871, 0.67718627951073775345, 0.89975799541146015731, 1,
  // np 10
  -1, -0.91953390816645881383, -0.73877386510550507500, -0.47792494981044449566,
  -0.16527895766638702463, 0.16527895766638702463, 0.47792494981044449566,
  0.73877386510550507500, 0.91953390816645881383, 1,
  // np 11
  -1, -0.93400143040805913433, -0.78448347366314441862, -0.56523532699620500647,
  -0.29575813558693939143, 0, 0.29575813558693939143, 0.56523532699620500647,
  0.78448347366314441862, 0.93400143040805913433, 1,
  // np 12
  -1, -0.94489927222288222341, -0.81927932164400667835, -0.63287615303186067766,
  -0.39953094096534893226, -0.13655293285492755486, 0.13655293285492755486,
  0.39953094096534893226, 0.63287615303186067766, 0.81927932164400667835,
  0.94489927222288222341, 1,
  // np 13
  -1, -0.95330984664216391190, -0.84634756465187231687, -0.68618846908175742607,
  -0.48290982109133620175, -0.24928693010623999257, 0, 0.24928693010623999257,
  0.48290982109133620175, 0.68618846908175742607, 0.84634756465187231687,
  0.95330984664216391190, 1,
  // np 16
  -1, -0.96956804627021793295, -0.89920053309347209299, -0.79200829186181506393,
  -0.65238870288249308947, -0.48605942188713761178, -0.29983046890076320810,
  -0.10132627352194944784, 0.10132627352194944784, 0.29983046890076320810,
  0.48605942188713761178, 0.65238870288249308947, 0.79200829186181506393,
  0.89920053309347209299, 0.96956804627021793295, 1,
  // These were generated by ...
  // np 20
  -1.000000000000000444e+00,-9.807437048939142699e-01,-9.359344988126656606e-01,
  -8.668779780899501519e-01,-7.753682609520559099e-01,-6.637764022903109851e-01,
  -5.349928640318862838e-01,-3.923531837139091483e-01,-2.395517059229862467e-01,
  -8.054593723882187695e-02, 8.054593723882176592e-02, 2.395517059229866907e-01,
   3.923531837139092038e-01, 5.349928640318860618e-01, 6.637764022903115402e-01,
   7.753682609520559099e-01, 8.668779780899503740e-01, 9.359344988126649945e-01,
   9.807437048939141588e-01, 9.999999999999997780e-01,
  // np 40
  -1.000000000000000444e+00,-9.952979292443492332e-01,-9.842662807175035500e-01,
  -9.670100764879890898e-01,-9.436397649436015778e-01,-9.143033396902096044e-01,
  -8.791863434793401044e-01,-8.385108227781067347e-01,-7.925339526015520164e-01,
  -7.415464191473839506e-01,-6.858705850843134222e-01,-6.258584527552573107e-01,
  -5.618894392947226812e-01,-4.943679781252532934e-01,-4.237209621555508288e-01,
  -3.503950449141814971e-01,-2.748538167143247390e-01,-1.975748737189107762e-01,
  -1.190467984449712358e-01,-3.976607080218173829e-02, 3.976607080218184931e-02,
   1.190467984449707917e-01, 1.975748737189108317e-01, 2.748538167143246280e-01,
   3.503950449141813861e-01, 4.237209621555509953e-01, 4.943679781252537930e-01,
   5.618894392947227923e-01, 6.258584527552575327e-01, 6.858705850843140883e-01,
   7.415464191473848388e-01, 7.925339526015524605e-01, 8.385108227781066237e-01,
   8.791863434793399934e-01, 9.143033396902093823e-01, 9.436397649436014667e-01,
   9.670100764879886457e-01, 9.842662807175033279e-01, 9.952979292443492332e-01,
   1.000000000000000222e+00
};

Real w_gll_table[] = {
  1, 1,
#define v0 1.0/3.0
  v0, 4.0/3.0, v0,
#undef v0
#define v0 1.0/6.0
#define v1 5.0/6.0
  v0, v1, v1, v0,
#undef v0
#undef v1
#define v0 1.0/10.0
#define v1 49.0/90.0
  v0, v1, 32.0/45.0, v1, v0,
#undef v0
#undef v1
#define v0 1.0/15.0
#define v1 (14 - std::sqrt(7.0))/30.0
#define v2 (14 + std::sqrt(7.0))/30.0
  v0, v1, v2, v2, v1, v0,
#undef v0
#undef v1
#undef v2
#define v0 1.0/21.0
#define v1 (124 - 7*std::sqrt(15.0))/350.0
#define v2 (124 + 7*std::sqrt(15.0))/350.0
  v0, v1, v2, 256.0/525.0, v2, v1, v0,
#undef v0
#undef v1
#undef v2
  // The rest are obtained from the references in x_gll_table.
  // np 8
  0.03571428571428571429, 0.21070422714350603938, 0.34112269248350436476,
  0.41245879465870388157, 0.41245879465870388157, 0.34112269248350436476,
  0.21070422714350603938, 0.03571428571428571429,
  // np 9
  0.02777777777777777778, 0.16549536156080552505, 0.27453871250016173528,
  0.34642851097304634512, 0.37151927437641723356, 0.34642851097304634512,
  0.27453871250016173528, 0.16549536156080552505, 0.02777777777777777778,
  // np 10
  0.02222222222222222222, 0.13330599085107011113, 0.22488934206312645212,
  0.29204268367968375788, 0.32753976118389745666, 0.32753976118389745666,
  0.29204268367968375788, 0.22488934206312645212, 0.13330599085107011113,
  0.02222222222222222222,
  // np 11
  0.01818181818181818182, 0.10961227326699486446, 0.18716988178030520411,
  0.24804810426402831404, 0.28687912477900808868, 0.30021759545569069379,
  0.28687912477900808868, 0.24804810426402831404, 0.18716988178030520411,
  0.10961227326699486446, 0.01818181818181818182,
  // np 12
  0.01515151515151515152, 0.09168451741319613067, 0.15797470556437011517,
  0.21250841776102114536, 0.25127560319920128029, 0.27140524091069617700,
  0.27140524091069617700, 0.25127560319920128029, 0.21250841776102114536,
  0.15797470556437011517, 0.09168451741319613067, 0.01515151515151515152,
  // np 13
  0.01282051282051282051, 0.07780168674681892779, 0.13498192668960834912,
  0.18364686520355009201, 0.22076779356611008609, 0.24401579030667635646,
  0.25193084933344673604, 0.24401579030667635646, 0.22076779356611008609,
  0.18364686520355009201, 0.13498192668960834912, 0.07780168674681892779,
  0.01282051282051282051,
  // np 16
  0.00833333333333333333, 0.05085036100591990540, 0.08939369732593080099,
  0.12425538213251409835, 0.15402698080716428081, 0.17749191339170412530,
  0.19369002382520358432, 0.20195830817822987149, 0.20195830817822987149,
  0.19369002382520358432, 0.17749191339170412530, 0.15402698080716428081,
  0.12425538213251409835, 0.08939369732593080099, 0.05085036100591990540,
  0.00833333333333333333,
  // np 20
  5.263157894736591319e-03, 3.223712318848950820e-02, 5.718180212756650976e-02,
  8.063176399611952927e-02, 1.019914996994508855e-01, 1.207092276286748506e-01,
  1.363004823587242453e-01, 1.483615540709165292e-01, 1.565801026474751279e-01,
  1.607432863878452134e-01, 1.607432863878455465e-01, 1.565801026474766267e-01,
  1.483615540709174452e-01, 1.363004823587237735e-01, 1.207092276286746285e-01,
  1.019914996994501638e-01, 8.063176399612016765e-02, 5.718180212756735631e-02,
  3.223712318848781511e-02, 5.263157894736977295e-03,
  // np 40
  1.282051282051049814e-03, 7.891011588600378365e-03, 1.415930754992025115e-02,
  2.033475906338731362e-02, 2.638119065314142517e-02, 3.226071792711650982e-02,
  3.793624370070859675e-02, 4.337190819475848086e-02, 4.853335384591447171e-02,
  5.338795197149482502e-02, 5.790501198178590186e-02, 6.205597647570913061e-02,
  6.581460222289658990e-02, 6.915712627608086582e-02, 7.206241630205420523e-02,
  7.451210423538938421e-02, 7.649070243339699260e-02, 7.798570160868012469e-02,
  7.898764992536440321e-02, 7.949021276154909221e-02, 7.949021276154875915e-02,
  7.898764992536433382e-02, 7.798570160868083245e-02, 7.649070243339699260e-02,
  7.451210423538932870e-02, 7.206241630205523219e-02, 6.915712627608143481e-02,
  6.581460222289574336e-02, 6.205597647571005349e-02, 5.790501198178544390e-02,
  5.338795197149397154e-02, 4.853335384591457580e-02, 4.337190819475750247e-02,
  3.793624370070915880e-02, 3.226071792711854291e-02, 2.638119065314229253e-02,
  2.033475906338612707e-02, 1.415930754992078891e-02, 7.891011588600102544e-03,
  1.282051282051263619e-03
};

/* These Gauss-Legendre tables were obtained using
   $ gsl-config --version
   1.15
   with calls to
   gsl_integration_glfixed_table_alloc
   gsl_integration_glfixed_point
   gsl_integration_glfixed_table_free.
 */

Real x_gl_table[] = {
  // np 1
  0.000000000000000000,
  // np 2
  -0.577350269189625731,  0.577350269189625731,
  // np 3
  -0.774596669241483404,  0.000000000000000000,  0.774596669241483404,
  // np 4
  -0.861136311594052573, -0.339981043584856257,  0.339981043584856257,
  0.861136311594052573,
  // np 5
  -0.906179845938663964, -0.538469310105683108,  0.000000000000000000,
  0.538469310105683108,  0.906179845938663964,
  // np 6
  -0.932469514203152050, -0.661209386466264482, -0.238619186083196905,
  0.238619186083196905,  0.661209386466264482,  0.932469514203152050,
  // np 7
  -0.949107912342758486, -0.741531185599394460, -0.405845151377397184,
  0.000000000000000000,  0.405845151377397184,  0.741531185599394460,
  0.949107912342758486,
  // np 8
  -0.960289856497536287, -0.796666477413626728, -0.525532409916328991,
  -0.183434642495649808,  0.183434642495649808,  0.525532409916328991,
  0.796666477413626728,  0.960289856497536287,
  // np 9
  -0.968160239507626086, -0.836031107326635770, -0.613371432700590358,
  -0.324253423403808916,  0.000000000000000000,  0.324253423403808916,
  0.613371432700590358,  0.836031107326635770,  0.968160239507626086,
  // np 10
  -0.973906528517171743, -0.865063366688984536, -0.679409568299024436,
  -0.433395394129247213, -0.148874338981631216,  0.148874338981631216,
  0.433395394129247213,  0.679409568299024436,  0.865063366688984536,
  0.973906528517171743,
  // np 11
  -0.978228658146056973, -0.887062599768095317, -0.730152005574049356,
  -0.519096129206811807, -0.269543155952344959,  0.000000000000000000,
  0.269543155952344959,  0.519096129206811807,  0.730152005574049356,
  0.887062599768095317,  0.978228658146056973,
  // np 12
  -0.981560634246719244, -0.904117256370474909, -0.769902674194304693,
  -0.587317954286617483, -0.367831498998180184, -0.125233408511468913,
  0.125233408511468913,  0.367831498998180184,  0.587317954286617483,
  0.769902674194304693,  0.904117256370474909,  0.981560634246719244,
  // np 20
  -9.931285991850951067e-01,-9.639719272779138093e-01,-9.122344282513260572e-01,
  -8.391169718222188934e-01,-7.463319064601505737e-01,-6.360536807265148029e-01,
  -5.108670019508270155e-01,-3.737060887154195488e-01,-2.277858511416447074e-01,
  -7.652652113349758811e-02, 7.652652113349747709e-02, 2.277858511416453458e-01,
   3.737060887154196598e-01, 5.108670019508269045e-01, 6.360536807265145809e-01,
   7.463319064601506847e-01, 8.391169718222186713e-01, 9.122344282513259461e-01,
   9.639719272779136983e-01, 9.931285991850947736e-01,
  // np 40
  -9.982377097105593622e-01,-9.907262386994571957e-01,-9.772599499837743009e-01,
  -9.579168192137917925e-01,-9.328128082786765196e-01,-9.020988069688743449e-01,
  -8.659595032122592295e-01,-8.246122308333112549e-01,-7.783056514265194181e-01,
  -7.273182551899272097e-01,-6.719566846141792338e-01,-6.125538896679805223e-01,
  -5.494671250951285169e-01,-4.830758016861784188e-01,-4.137792043716050916e-01,
  -3.419940908257583234e-01,-2.681521850072537405e-01,-1.926975807013709130e-01,
  -1.160840706752553353e-01,-3.877241750605066317e-02, 3.877241750605057297e-02,
   1.160840706752554186e-01, 1.926975807013715514e-01, 2.681521850072536850e-01,
   3.419940908257582679e-01, 4.137792043716052026e-01, 4.830758016861788073e-01,
   5.494671250951282948e-01, 6.125538896679798562e-01, 6.719566846141794558e-01,
   7.273182551899269876e-01, 7.783056514265194181e-01, 8.246122308333114770e-01,
   8.659595032122591185e-01, 9.020988069688744559e-01, 9.328128082786766306e-01,
   9.579168192137919036e-01, 9.772599499837744119e-01, 9.907262386994571957e-01,
   9.982377097105595842e-01
};

Real w_gl_table[] = {
  // np 1
  2.000000000000000000,
  // np 2
  1.000000000000000000,  1.000000000000000000,
  // np 3
  0.555555555555555580,  0.888888888888888840,  0.555555555555555580,
  // np 4
  0.347854845137453850,  0.652145154862546095,  0.652145154862546095,
  0.347854845137453850,
  // np 5
  0.236926885056189085,  0.478628670499366471,  0.568888888888888888,
  0.478628670499366471,  0.236926885056189085,
  // np 6
  0.171324492379170357,  0.360761573048138606,  0.467913934572691037,
  0.467913934572691037,  0.360761573048138606,  0.171324492379170357,
  // np 7
  0.129484966168869703,  0.279705391489276645,  0.381830050505118923,
  0.417959183673469403,  0.381830050505118923,  0.279705391489276645,
  0.129484966168869703,
  // np 8
  0.101228536290376259,  0.222381034453374482,  0.313706645877887269,
  0.362683783378361990,  0.362683783378361990,  0.313706645877887269,
  0.222381034453374482,  0.101228536290376259,
  // np 9
  0.081274388361574412,  0.180648160694857396,  0.260610696402935438,
  0.312347077040002863,  0.330239355001259782,  0.312347077040002863,
  0.260610696402935438,  0.180648160694857396,  0.081274388361574412,
  // np 10
  0.066671344308688138,  0.149451349150580587,  0.219086362515982042,
  0.269266719309996350,  0.295524224714752870,  0.295524224714752870,
  0.269266719309996350,  0.219086362515982042,  0.149451349150580587,
  0.066671344308688138,
  // np 11
  0.055668567116173663,  0.125580369464904612,  0.186290210927734262,
  0.233193764591990482,  0.262804544510246652,  0.272925086777900616,
  0.262804544510246652,  0.233193764591990482,  0.186290210927734262,
  0.125580369464904612,  0.055668567116173663,
  // np 12
  0.047175336386511828,  0.106939325995318427,  0.160078328543346221,
  0.203167426723065925,  0.233492536538354806,  0.249147045813402773,
  0.249147045813402773,  0.233492536538354806,  0.203167426723065925,
  0.160078328543346221,  0.106939325995318427,  0.047175336386511828,
  // np 20
  1.761400713915203115e-02, 4.060142980038679295e-02, 6.267204833410935927e-02,
  8.327674157670490740e-02, 1.019301198172407469e-01, 1.181945319615177875e-01,
  1.316886384491771089e-01, 1.420961093183817636e-01, 1.491729864726042132e-01,
  1.527533871307259483e-01, 1.527533871307257540e-01, 1.491729864726036026e-01,
  1.420961093183818191e-01, 1.316886384491771089e-01, 1.181945319615180234e-01,
  1.019301198172409273e-01, 8.327674157670479638e-02, 6.267204833410866538e-02,
  4.060142980038659866e-02, 1.761400713915208319e-02,
  // np 40
  4.521277098532855247e-03, 1.049828453115274687e-02, 1.642105838190844810e-02,
  2.224584919416628878e-02, 2.793700698002377775e-02, 3.346019528254738640e-02,
  3.878216797447268938e-02, 4.387090818567344203e-02, 4.869580763507231486e-02,
  5.322784698393681624e-02, 5.743976909939132319e-02, 6.130624249292835476e-02,
  6.480401345660163903e-02, 6.791204581523389849e-02, 7.061164739128607259e-02,
  7.288658239580475540e-02, 7.472316905796841380e-02, 7.611036190062606122e-02,
  7.703981816424812501e-02, 7.750594797842426387e-02, 7.750594797842494388e-02,
  7.703981816424723683e-02, 7.611036190062642204e-02, 7.472316905796939912e-02,
  7.288658239580428355e-02, 7.061164739128689138e-02, 6.791204581523367645e-02,
  6.480401345660062595e-02, 6.130624249292876415e-02, 5.743976909939003950e-02,
  5.322784698393663583e-02, 4.869580763507171117e-02, 4.387090818567387224e-02,
  3.878216797447258529e-02, 3.346019528254691455e-02, 2.793700698002415939e-02,
  2.224584919416707288e-02, 1.642105838190780973e-02, 1.049828453115260636e-02,
  4.521277098532844839e-03
};

bool is_gll_supported (const int np) {
  return (np >= 2 && np <= 13) || np == 16 || np == 20 || np == 40;
}

bool is_gl_supported (const int np) {
  return (np >= 1 && np <= 12) || np == 20 || np == 40;
}

static const Real* get_x_gll_small (const int np) {
  throw_if(np < 2, "get_x_gll: np < 2 not supported.");
  return x_gll_table + (np*(np-1))/2 - 1;
}

static const Real* get_w_gll_small (const int np) {
  throw_if(np < 2, "get_x_gll: np < 2 not supported.");
  return w_gll_table + (np*(np-1))/2 - 1;
}

const Real* get_x_gll (const int np) {
  if (np <= 13) return get_x_gll_small(np);
  const auto base = x_gll_table + (14*(14-1))/2 - 1;
  switch (np) {
  case 16: return base;
  case 20: return base + 16;
  case 40: return base + 16 + 20;
  default: throw_if(true, "get_x_gll: unsupported np: " << np);
  }
}

const Real* get_w_gll (const int np) {
  if (np <= 13) return get_w_gll_small(np);
  const auto base = w_gll_table + (14*(14-1))/2 - 1;
  switch (np) {
  case 16: return base;
  case 20: return base + 16;
  case 40: return base + 16 + 20;
  default: throw_if(true, "get_w_gll: unsupported np: " << np);
  }
}

const Real* get_x_gl_small (const int np) {
  throw_if_nomsg( ! is_gl_supported(np));
  return x_gl_table + (np*(np-1))/2;
}

const Real* get_w_gl_small (const int np) {
  throw_if_nomsg( ! is_gl_supported(np));
  return w_gl_table + (np*(np-1))/2;
}

const Real* get_x_gl (const int np) {
  static const int nps = 12;
  if (np <= nps) return get_x_gl_small(np);
  const auto base = x_gl_table + (nps*(nps+1))/2;
  switch (np) {
  case 20: return base;
  case 40: return base + 20;
  default: throw_if(true, "get_x_gl: unsupported np: " << np);
  }
}

const Real* get_w_gl (const int np) {
  static const int nps = 12;
  if (np <= nps) return get_w_gl_small(np);
  const auto base = w_gl_table + (nps*(nps+1))/2;
  switch (np) {
  case 20: return base;
  case 40: return base + 20;
  default: throw_if(true, "get_w_gl: unsupported np: " << np);
  }
}

Quadrature::Quadrature (const int nq_, const Type type_) {
  nq = nq_;
  type = type_;
  assert((type == gll && is_gll_supported(nq)) || is_gl_supported(nq));
}

bool Quadrature::is_supported (const Type type, const int nq) {
  if (type == gll) return is_gll_supported(nq);
  else return is_gl_supported(nq);
}

} // namespace acorn
} // namespace woodland
